// vim:ft=javascript

ARG_WITH("dba", "DBA support", "no");
ARG_WITH("qdbm", "DBA: QDBM support", "no");
ARG_WITH("db", "DBA: Berkeley DB support", "no");
ARG_WITH("lmdb", "DBA: Lightning memory-mapped database support", "no");

if (PHP_DBA != "no") {
	EXTENSION("dba", "dba.c dba_cdb.c dba_db1.c dba_db2.c dba_db3.c dba_dbm.c dba_flatfile.c dba_gdbm.c dba_ndbm.c dba_inifile.c", null, "/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1");
	ADD_SOURCES("ext/dba/libcdb", "cdb.c cdb_make.c uint32.c", "dba");
	ADD_SOURCES("ext/dba/libflatfile", "flatfile.c", "dba");
	ADD_SOURCES("ext/dba/libinifile", "inifile.c", "dba");
	AC_DEFINE('HAVE_DBA', 1, 'DBA support');
	ADD_FLAG("CFLAGS_DBA", "/D DBA_FLATFILE=1 /D DBA_CDB=1 /D DBA_CDB_MAKE=1 /D DBA_CDB_BUILTIN=1 /D DBA_INIFILE=1");

	if (PHP_DB != "no") {
		if (CHECK_LIB("libdb31s.lib;libdb61.lib", "dba", PHP_DBA) &&
			CHECK_HEADER_ADD_INCLUDE("db.h", "CFLAGS_DBA")) {
			ADD_FLAG("CFLAGS_DBA", "/D DBA_DB1=0 /D DB1_VERSION=\"\\\"Berkeley DB 1.85 emulation in DB3\\\"\" /D DB1_INCLUDE_FILE=\"\\\"db_185.h\\\"\" /D DBA_DB3=1 /D DB3_INCLUDE_FILE=\"\\\"db.h\\\"\"");
		} else {
			WARNING("dba: db handlers not enabled; libraries and headers not found");
		}
	}

	if (PHP_QDBM != "no") {
		if (CHECK_LIB("qdbm_a.lib;qdbm.lib", "dba", PHP_DBA) &&
			CHECK_HEADER_ADD_INCLUDE("depot.h", "CFLAGS_DBA", PHP_DBA + ";" + PHP_PHP_BUILD + "\\include\\qdbm")) {
			ADD_SOURCES("ext/dba", "dba_qdbm.c", "dba");
			AC_DEFINE("QDBM_INCLUDE_FILE", "<depot.h>", "", false);
			AC_DEFINE("DBA_QDBM", 1, "");
		} else {
			WARNING("dba: qdbm handlers not enabled; libraries and headers not found");
		}
	}

	if (PHP_LMDB != "no") {
		if (CHECK_LIB("liblmdb_a.lib", "dba", PHP_DBA) &&
			CHECK_HEADER_ADD_INCLUDE("lmdb.h", "CFLAGS_DBA") &&
			CHECK_LIB("ntdll.lib", "dba", PHP_DBA)) {
			ADD_SOURCES("ext/dba", "dba_lmdb.c", "dba");
			AC_DEFINE("LMDB_INCLUDE_FILE", "<lmdb.h>", "", false);
			AC_DEFINE("DBA_LMDB", 1, "");
		} else {
			WARNING("dba: lmdb handlers not enabled; libraries and headers not found");
		}
	}
}
