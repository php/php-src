// vim:ft=javascript

ARG_WITH("mysqlnd", "Mysql Native Client Driver", "yes");
if (PHP_MYSQLND != "no") {

	if (CHECK_LIB("ws2_32.lib", "mysqlnd")) {
		mysqlnd_source =
			"mysqlnd_alloc.c " +
			"mysqlnd_auth.c " +
			"mysqlnd_block_alloc.c " +
			"mysqlnd_connection.c " +
			"mysqlnd_charset.c " +
			"mysqlnd_commands.c " +
			"mysqlnd_debug.c " +
			"mysqlnd_driver.c " +
			"mysqlnd_ext_plugin.c " +
			"mysqlnd_loaddata.c " +
			"mysqlnd_reverse_api.c " +
			"mysqlnd_plugin.c " +
			"mysqlnd_protocol_frame_codec.c " +
			"mysqlnd_ps.c " +
			"mysqlnd_ps_codec.c " +
			"mysqlnd_read_buffer.c " +
			"mysqlnd_result.c " +
			"mysqlnd_result_meta.c " +
			"mysqlnd_statistics.c " +
			"mysqlnd_vio.c " +
			"mysqlnd_wireprotocol.c " +
			"php_mysqlnd.c ";
		EXTENSION("mysqlnd", mysqlnd_source, false, "/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1");
		if ((((PHP_ZLIB=="no") && (CHECK_LIB("zlib_a.lib;zlib.lib", "mysqlnd", PHP_MYSQLND))) ||
			(PHP_ZLIB_SHARED && CHECK_LIB("zlib.lib", "mysqlnd", PHP_MYSQLND)) ||
			(PHP_ZLIB == "yes" && (!PHP_ZLIB_SHARED))) &&
			CHECK_HEADER_ADD_INCLUDE("zlib.h", "CFLAGS", "..\\zlib;" + php_usual_include_suspects)
			)
		{
			AC_DEFINE("MYSQLND_COMPRESSION_ENABLED", 1, "Define to 1 if mysqlnd has compressed protocol support.");
			AC_DEFINE("MYSQLND_SSL_SUPPORTED", 1, "Define to 1 if mysqlnd core SSL is enabled.");
			if (CHECK_LIB("crypt32.lib", "mysqlnd")) {
				AC_DEFINE("MYSQLND_HAVE_SSL", 1, "Define to 1 if mysqlnd extended SSL is enabled through OpenSSL.");
			}
		}
		PHP_INSTALL_HEADERS("", "ext/mysqlnd");
	}
}
