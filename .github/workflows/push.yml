name: Push
on:
  push:
    paths-ignore:
      - docs/*
      - NEWS
      - UPGRADING
      - UPGRADING.INTERNALS
      - '**/README.*'
      - CONTRIBUTING.md
      - CODING_STANDARDS.md
    branches:
      - PHP-7.4
      - PHP-8.0
      - PHP-8.1
      - PHP-8.2
      - master
  pull_request:
    paths-ignore:
      - docs/*
      - NEWS
      - UPGRADING
      - UPGRADING.INTERNALS
      - '**/README.*'
      - CONTRIBUTING.md
      - CODING_STANDARDS.md
    branches:
      - '**'
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.url || github.run_id }}
  cancel-in-progress: true
env:
  CC: ccache gcc
  CXX: ccache g++
jobs:
  LINUX_X64:
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - debug: true
            zts: true
            asan: true
    name: "LINUX_X64_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}${{ matrix.asan && '_ASAN' || '' }}"
    runs-on: ubuntu-22.04
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Create MSSQL container
        uses: ./.github/actions/setup-mssql
      - name: Create Oracle container
        uses: ./.github/actions/setup-oracle
      - name: Setup Caddy server
        uses: ./.github/actions/setup-caddy
      - name: apt
        uses: ./.github/actions/apt-x64
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          # This duplicates the "job.name" expression above because
          # GitHub has no way to query the job name (github.job is the
          # job id, not the job name)
          key: "LINUX_X64_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}${{ matrix.asan && '_ASAN' || '' }}-${{hashFiles('main/php_version.h')}}"
          append-timestamp: false
      - name: ./configure
        uses: ./.github/actions/configure-x64
        with:
          configurationParameters: >-
            --${{ matrix.debug && 'enable' || 'disable' }}-debug
            --${{ matrix.zts && 'enable' || 'disable' }}-zts
            ${{ matrix.asan && 'CFLAGS="-fsanitize=undefined,address -DZEND_TRACK_ARENA_ALLOC" LDFLAGS="-fsanitize=undefined,address" CC=clang CXX=clang++ --disable-opcache-jit' || '' }}
          skipSlow: ${{ matrix.asan }}
      - name: make
        run: make -j$(/usr/bin/nproc) >/dev/null
      - name: make install
        uses: ./.github/actions/install-linux
        with:
          withOci: ${{ !matrix.asan }}
      - name: Setup
        uses: ./.github/actions/setup-x64
      - name: Test
        if: matrix.asan == false
        uses: ./.github/actions/test-linux
        with:
          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}
      - name: Test ${{ matrix.asan && 'OpCache' || 'Tracing JIT' }}
        uses: ./.github/actions/test-linux
        with:
          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}${{ matrix.asan && '_ASAN' || '' }}_${{ matrix.asan && 'OpCache' || 'Tracing JIT' }}
          runTestsParameters: >-
            -d zend_extension=opcache.so
            -d opcache.enable_cli=1
            ${{ !matrix.asan && '-d opcache.jit_buffer_size=16M' || '' }}
            ${{ matrix.asan && '--asan -x' || '' }}
      - name: Verify generated files are up to date
        uses: ./.github/actions/verify-generated-files
