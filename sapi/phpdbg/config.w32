ARG_ENABLE('phpdbg', 'Build phpdbg', 'no');
ARG_ENABLE('phpdbgs', 'Build phpdbg shared', 'no');
ARG_ENABLE('phpdbg-webhelper', 'Build phpdbg webhelper', 'yes');

PHPDBG_SOURCES='phpdbg.c phpdbg_prompt.c phpdbg_cmd.c phpdbg_info.c phpdbg_help.c phpdbg_break.c ' +
		'phpdbg_print.c phpdbg_bp.c phpdbg_opcode.c phpdbg_list.c phpdbg_utils.c ' +
		'phpdbg_set.c phpdbg_frame.c phpdbg_watch.c phpdbg_win.c phpdbg_btree.c '+
		'phpdbg_parser.c phpdbg_lexer.c phpdbg_sigsafe.c phpdbg_wait.c phpdbg_io.c ' +
		'phpdbg_sigio_win32.c phpdbg_eol.c phpdbg_out.c';
PHPDBG_DLL='php' + PHP_VERSION + 'phpdbg.dll';
PHPDBG_EXE='phpdbg.exe';
PHPDBG_CFLAGS='/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1';

var PHP_PHPDBG_PGO = false;
var PHP_PHPDBG_WEBHELPER_PGO = false;
var PHP_PHPDBGS_PGO = false;

if (PHP_PHPDBG == "yes") {
	SAPI('phpdbg', PHPDBG_SOURCES, PHPDBG_EXE, PHPDBG_CFLAGS);
	ADD_FLAG("LIBS_PHPDBG", "ws2_32.lib user32.lib");
	ADD_FLAG("CFLAGS_PHPDBG", "/D YY_NO_UNISTD_H");
	ADD_FLAG("LDFLAGS_PHPDBG", "/stack:8388608");

	if (PHP_PHPDBG_WEBHELPER == "yes") {
		EXTENSION('phpdbg_webhelper', 'phpdbg_rinit_hook.c phpdbg_webdata_transfer.c');
	}
}

if (PHP_PHPDBGS == "yes") {
	SAPI('phpdbgs', PHPDBG_SOURCES, PHPDBG_DLL, '/D PHP_PHPDBG_EXPORTS /I win32');
	ADD_FLAG("LIBS_PHPDBGS", "ws2_32.lib user32.lib");
	ADD_FLAG("CFLAGS_PHPDBGS", "/D YY_NO_UNISTD_H");
}
