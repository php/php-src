PHP 8.2 UPGRADE NOTES

1. Backward Incompatible Changes
2. New Features
3. Changes in SAPI modules
4. Deprecated Functionality
5. Changed Functions
6. New Functions
7. New Classes and Interfaces
8. Removed Extensions and SAPIs
9. Other Changes to Extensions
10. New Global Constants
11. Changes to INI File Handling
12. Windows Support
13. Other Changes
14. Performance Improvements

========================================
1. Backward Incompatible Changes
========================================

========================================
2. New Features
========================================

- Curl:
  . Added CURLINFO_EFFECTIVE_METHOD option and returning the effective
    HTTP method in curl_getinfo() return value.

========================================
3. Changes in SAPI modules
========================================

========================================
4. Deprecated Functionality
========================================

- Core:
  . Callables that are not accepted by the $callable() syntax (but are accepted
    by call_user_func) are deprecated. In particular:

        "self::method"
        "parent::method"
        "static::method"
        ["self", "method"]
        ["parent", "method"]
        ["static", "method"]
        ["Foo", "Bar::method"]
        [new Foo, "Bar::method"]

    This does not affect normal method callables like "A::method" or
    ["A", "method"]. A deprecation notice is only emitted on call. Both
    is_callable() and the callable type will silently accept these callables
    until support for them is removed entirely.

    RFC: https://wiki.php.net/rfc/deprecate_partially_supported_callables

- Mbstring:
  . Use of QPrint, Base64, Uuencode, and HTML-ENTITIES 'text encodings' is
    deprecated for all Mbstring functions. Unlike all the other text
    encodings supported by Mbstring, these do not encode a sequence of
    Unicode codepoints, but rather a sequence of raw bytes. It is not
    clear what the correct return values for most Mbstring functions should
    be when one of these non-encodings is specified. Further, PHP has
    separate, built-in implementations of all of them; for example, UUencoded
    data can be handled using convert_uuencode/convert_uudecode.

========================================
5. Changed Functions
========================================

========================================
6. New Functions
========================================

========================================
7. New Classes and Interfaces
========================================

========================================
8. Removed Extensions and SAPIs
========================================

========================================
9. Other Changes to Extensions
========================================

- Zip:
  . extension updated to 1.20.0 with new methods:
    ZipArchive::cleaError, getStreamName and getStreamIndex

========================================
10. New Global Constants
========================================

========================================
11. Changes to INI File Handling
========================================

========================================
12. Windows Support
========================================

========================================
13. Other Changes
========================================

========================================
14. Performance Improvements
========================================
